services:
  frontend:
    build: ./src/front-end
    ports:
      - '5173:80'  # Or '3000:3000' if using a dev server
    depends_on:
      - backend
    volumes:
      - ./src/front-end:/app  # <-- watch for changes
      - /app/node_modules     # Avoid overwriting node_modules\
    environment:
      - CHOKIDAR_USEPOLLING=true  # For file watching in Docker on some systems
      - NODE_ENV=development # Set environment to development, change to production when needed
    networks:
      - ft_transcendence_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      co.elastic.logs/enabled: "true"
      co.elastic.logs/json.keys_under_root: "true"
      co.elastic.logs/module: "nginx"
      service.name: "frontend"
      service.type: "web"
      app.component: "ui"

  backend:
    build:
      context: ./src/back-end
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    restart: unless-stopped
    networks:
      - ft_transcendence_net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service"
    labels:
      co.elastic.logs/enabled: "true"
      co.elastic.logs/json.keys_under_root: "true"
      co.elastic.logs/module: "fastify"
      service.name: "backend"
      service.type: "api"
      app.component: "server"

volumes:
  sqlite-data:

networks:
  ft_transcendence_net:
    name: ft_transcendence_net